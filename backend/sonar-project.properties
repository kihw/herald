# Herald.lol Gaming Analytics - SonarQube Project Configuration
# Optimized for gaming platform code quality analysis

# Project identification
sonar.projectKey=herald-gaming-analytics
sonar.projectName=Herald.lol Gaming Analytics Platform
sonar.projectVersion=1.0.0
sonar.projectDescription=Gaming analytics platform for League of Legends and TFT with <5s performance target

# Gaming platform organization
sonar.organization=herald-gaming
sonar.links.homepage=https://herald.lol
sonar.links.ci=https://github.com/herald-lol/herald/actions
sonar.links.issue=https://github.com/herald-lol/herald/issues
sonar.links.scm=https://github.com/herald-lol/herald

# Source code configuration
sonar.sources=.
sonar.sourceEncoding=UTF-8

# Go language configuration for gaming backend
sonar.go.coverage.reportPaths=coverage.out,**/coverage.out
sonar.go.tests.reportPaths=test-report.json,**/test-report.json

# Include patterns - Gaming platform specific
sonar.inclusions=\
  **/*.go,\
  **/*.ts,\
  **/*.tsx,\
  **/*.js,\
  **/*.jsx,\
  **/*.sql,\
  **/*.proto,\
  **/*.yaml,\
  **/*.yml

# Exclude patterns - Gaming platform optimization
sonar.exclusions=\
  **/vendor/**,\
  **/node_modules/**,\
  **/*_test.go,\
  **/*.test.ts,\
  **/*.test.js,\
  **/testdata/**,\
  **/mock/**,\
  **/mocks/**,\
  **/*.pb.go,\
  **/*_grpc.pb.go,\
  **/dist/**,\
  **/build/**,\
  **/coverage/**,\
  **/.next/**,\
  **/volumes/**,\
  **/security-reports/**,\
  **/dependency-monitoring/**

# Test configuration for gaming features
sonar.tests=.
sonar.test.inclusions=\
  **/*_test.go,\
  **/*.test.ts,\
  **/*.test.js,\
  **/*.spec.ts,\
  **/*.spec.js

sonar.test.exclusions=\
  **/vendor/**,\
  **/node_modules/**,\
  **/dist/**,\
  **/build/**

# Coverage configuration for gaming performance monitoring
sonar.coverage.exclusions=\
  **/*_test.go,\
  **/*.test.ts,\
  **/*.test.js,\
  **/main.go,\
  **/*.pb.go,\
  **/*_grpc.pb.go,\
  **/mock/**,\
  **/testdata/**

# Gaming-specific quality profiles
sonar.profile.go=Herald Gaming Go Profile
sonar.profile.ts=Herald Gaming TypeScript Profile
sonar.profile.js=Herald Gaming JavaScript Profile

# Gaming platform quality gates
sonar.qualitygate.wait=true
sonar.qualitygate.timeout=300

# Gaming performance targets (custom properties)
sonar.gaming.performance.target=5000
sonar.gaming.concurrent.users=1000000
sonar.gaming.uptime.target=99.9

# Duplication analysis for gaming code reuse
sonar.cpd.go.minimumtokens=50
sonar.cpd.ts.minimumtokens=50
sonar.cpd.js.minimumtokens=50

# Gaming platform specific rules
sonar.issue.ignore.multicriteria=e1,e2,e3,e4,e5

# E1: Ignore TODO comments in gaming development
sonar.issue.ignore.multicriteria.e1.ruleKey=common-go:InsufficientCommentDensity
sonar.issue.ignore.multicriteria.e1.resourceKey=**/internal/gaming/**

# E2: Allow long parameter lists for gaming configuration
sonar.issue.ignore.multicriteria.e2.ruleKey=go:S107
sonar.issue.ignore.multicriteria.e2.resourceKey=**/config/**

# E3: Gaming analytics may need complex expressions for performance
sonar.issue.ignore.multicriteria.e3.ruleKey=go:S3776
sonar.issue.ignore.multicriteria.e3.resourceKey=**/analytics/**

# E4: Riot API integration may have long method signatures
sonar.issue.ignore.multicriteria.e4.ruleKey=go:S107
sonar.issue.ignore.multicriteria.e4.resourceKey=**/riot/**

# E5: Gaming performance optimizations may require complex logic
sonar.issue.ignore.multicriteria.e5.ruleKey=typescript:S3776
sonar.issue.ignore.multicriteria.e5.resourceKey=**/gaming/**

# Branch analysis configuration
sonar.branch.name=${CI_COMMIT_REF_NAME:-master}
sonar.branch.target=master

# Pull request analysis
sonar.pullrequest.key=${CI_MERGE_REQUEST_IID:-}
sonar.pullrequest.branch=${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-}
sonar.pullrequest.base=${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:-master}

# Gaming platform logging
sonar.log.level=INFO
sonar.verbose=false

# Gaming-specific analysis parameters
sonar.analysis.mode=publish
sonar.buildString=${BUILD_NUMBER:-local}
sonar.scm.provider=git
sonar.scm.forceReloadAll=false

# Gaming platform working directory
sonar.working.directory=.sonar

# Gaming platform scanner configuration
sonar.scanner.skipJreProvisioning=false

# Custom gaming metrics
sonar.projectDate=${BUILD_DATE:-}
sonar.projectVersion.pattern=\\d+\\.\\d+\\.\\d+

# Gaming platform specific tags
sonar.tags=gaming,analytics,performance,realtime,go,typescript,kubernetes

# Security configuration for gaming data protection
sonar.security.hotspots.inheritFromParent=true

# Gaming platform issue assignment
sonar.issues.defaultAssigneeLogin=herald-gaming-team

# Performance analysis for gaming targets
sonar.analysis.performance.target=5000
sonar.analysis.concurrent.users=1000000