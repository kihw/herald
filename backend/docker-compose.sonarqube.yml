version: '3.8'

# Herald.lol Gaming Analytics - SonarQube Code Quality Analysis
# Docker Compose configuration optimized for gaming platform

services:
  # SonarQube Community Edition for Herald.lol
  sonarqube-herald:
    image: sonarqube:10.3.0-community
    container_name: herald-sonarqube
    hostname: herald-sonarqube
    restart: unless-stopped
    
    # Gaming-optimized resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'
        reservations:
          memory: 2G
          cpus: '1'
    
    environment:
      # Database configuration
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube-db:5432/herald_sonar
      SONAR_JDBC_USERNAME: herald_sonar
      SONAR_JDBC_PASSWORD: ${SONAR_DB_PASSWORD:-herald_gaming_sonar_2024}
      
      # Gaming platform configuration
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
      
      # Performance tuning for gaming codebase analysis
      SONAR_WEB_JVM_OPTS: >-
        -server
        -Xms1g -Xmx2g
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:ParallelGCThreads=2
        -XX:ConcGCThreads=1
        -XX:+UnlockExperimentalVMOptions
        -XX:+UseCGroupMemoryLimitForHeap
      
      SONAR_CE_JVM_OPTS: >-
        -server
        -Xms512m -Xmx2g
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:ParallelGCThreads=2
        -XX:ConcGCThreads=1
        -XX:+UnlockExperimentalVMOptions
        -XX:+UseCGroupMemoryLimitForHeap
      
      # Gaming analytics specific settings
      SONAR_LOG_LEVEL: INFO
      SONAR_TELEMETRY_ENABLE: false
    
    ports:
      - "9000:9000"
    
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
      
      # Gaming-specific configuration
      - ./sonarqube/config:/opt/sonarqube/conf:ro
    
    networks:
      - herald-sonar-network
    
    depends_on:
      - sonarqube-db
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/api/system/status | grep -q UP || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    labels:
      - "com.herald.service=sonarqube"
      - "com.herald.gaming=analytics"
      - "com.herald.performance=code-quality"

  # PostgreSQL database for SonarQube
  sonarqube-db:
    image: postgres:15-alpine
    container_name: herald-sonarqube-db
    hostname: sonarqube-db
    restart: unless-stopped
    
    environment:
      POSTGRES_USER: herald_sonar
      POSTGRES_PASSWORD: ${SONAR_DB_PASSWORD:-herald_gaming_sonar_2024}
      POSTGRES_DB: herald_sonar
      
      # Gaming-optimized PostgreSQL settings
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
      POSTGRES_MAX_CONNECTIONS: 200
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
      POSTGRES_WORK_MEM: 16MB
      POSTGRES_MAINTENANCE_WORK_MEM: 128MB
    
    ports:
      - "5433:5432"
    
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
      - ./sonarqube/db-init:/docker-entrypoint-initdb.d:ro
    
    networks:
      - herald-sonar-network
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U herald_sonar -d herald_sonar"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    labels:
      - "com.herald.service=sonarqube-database"
      - "com.herald.gaming=infrastructure"

  # SonarQube Scanner service for CI/CD
  sonar-scanner-herald:
    image: sonarsource/sonar-scanner-cli:5.0
    container_name: herald-sonar-scanner
    
    environment:
      # Herald.lol gaming platform scanner configuration
      SONAR_HOST_URL: http://sonarqube-herald:9000
      SONAR_SCANNER_OPTS: >-
        -server
        -Xms512m -Xmx1g
    
    volumes:
      # Mount Herald.lol codebase
      - .:/usr/src:ro
      - sonar_scanner_cache:/opt/sonar-scanner/.sonar
    
    networks:
      - herald-sonar-network
    
    depends_on:
      sonarqube-herald:
        condition: service_healthy
    
    profiles:
      - scanner
    
    labels:
      - "com.herald.service=sonar-scanner"
      - "com.herald.gaming=ci-cd"

  # Gaming metrics collector for SonarQube
  gaming-metrics-collector:
    image: alpine:3.19
    container_name: herald-gaming-metrics-collector
    
    environment:
      SONARQUBE_URL: http://sonarqube-herald:9000
      SONARQUBE_TOKEN: ${SONAR_TOKEN:-}
      GAMING_PROJECT_KEY: herald-gaming-analytics
      PERFORMANCE_TARGET_MS: 5000
    
    volumes:
      - ./scripts/sonar-gaming-metrics.sh:/usr/local/bin/collect-metrics.sh:ro
      - gaming_metrics_data:/var/lib/gaming-metrics
    
    networks:
      - herald-sonar-network
    
    depends_on:
      sonarqube-herald:
        condition: service_healthy
    
    command: >
      sh -c "
        apk add --no-cache curl jq bash &&
        chmod +x /usr/local/bin/collect-metrics.sh &&
        while true; do
          /usr/local/bin/collect-metrics.sh || echo 'Metrics collection failed';
          sleep 3600;
        done
      "
    
    profiles:
      - metrics
    
    labels:
      - "com.herald.service=gaming-metrics"
      - "com.herald.gaming=monitoring"

# Gaming-optimized volumes
volumes:
  sonarqube_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/sonarqube/data
    labels:
      com.herald.volume: "sonarqube-data"
      com.herald.gaming: "code-quality"
  
  sonarqube_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/sonarqube/logs
    labels:
      com.herald.volume: "sonarqube-logs"
  
  sonarqube_extensions:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/sonarqube/extensions
    labels:
      com.herald.volume: "sonarqube-extensions"
  
  sonarqube_db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/volumes/sonarqube/database
    labels:
      com.herald.volume: "sonarqube-database"
  
  sonar_scanner_cache:
    driver: local
    labels:
      com.herald.volume: "scanner-cache"
  
  gaming_metrics_data:
    driver: local
    labels:
      com.herald.volume: "gaming-metrics"

# Gaming platform network
networks:
  herald-sonar-network:
    driver: bridge
    name: herald-sonar-network
    labels:
      com.herald.network: "sonar-quality"
      com.herald.gaming: "code-analysis"
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

# Gaming platform metadata
x-gaming-platform:
  name: "Herald.lol Gaming Analytics"
  description: "SonarQube setup for gaming platform code quality"
  performance_target: "<5s analytics response"
  concurrent_users: "1M+ supported"
  focus_areas:
    - "Gaming performance optimization"
    - "Riot API integration quality"
    - "Real-time analytics reliability"
    - "WebSocket/gRPC code quality"