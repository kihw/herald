apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: herald-istio
  namespace: istio-system
spec:
  profile: production
  
  # Herald.lol Gaming Platform Configuration
  values:
    pilot:
      autoscaleEnabled: true
      autoscaleMin: 2
      autoscaleMax: 5
      cpu:
        targetAverageUtilization: 60
      resources:
        requests:
          cpu: 500m
          memory: 2048Mi
      env:
        PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
        PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY: true
    
    telemetry:
      v2:
        prometheus:
          configOverride:
            inboundSidecar:
              disable_host_header_fallback: true
            outboundSidecar:
              disable_host_header_fallback: true
            gateway:
              disable_host_header_fallback: true
    
    global:
      proxy:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        holdApplicationUntilProxyStarts: true
        
      # Gaming platform optimizations
      defaultConfig:
        proxyStatsMatcher:
          inclusionRegexps:
          - ".*circuit_breakers.*"
          - ".*gaming.*"
          - ".*riot_api.*"
          - ".*analytics.*"
          inclusionPrefixes:
          - "cluster.outbound"
          - "cluster.inbound"
          - "http.inbound"
          - "http.outbound"
        
        # Performance tuning for gaming workloads
        concurrency: 2
        holdApplicationUntilProxyStarts: true
        
      # Multi-cluster support for global gaming
      multiCluster:
        clusterName: herald-primary
        enabled: false
  
  components:
    # Ingress Gateway for gaming traffic
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits:
            cpu: 4000m
            memory: 8Gi
        hpaSpec:
          minReplicas: 3
          maxReplicas: 10
          metrics:
          - type: Resource
            resource:
              name: cpu
              targetAverageUtilization: 60
        service:
          type: LoadBalancer
          ports:
          - port: 80
            targetPort: 8080
            name: http2
          - port: 443
            targetPort: 8443
            name: https
          - port: 9090
            targetPort: 9090
            name: grpc
        serviceAnnotations:
          service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
          service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    
    # Egress Gateway for Riot API calls
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        hpaSpec:
          minReplicas: 2
          maxReplicas: 5
  
  meshConfig:
    # Access logging for gaming analytics
    accessLogFile: /dev/stdout
    defaultConfig:
      holdApplicationUntilProxyStarts: true
      proxyMetadata:
        BOOTSTRAP_XDS_AGENT: "true"
    
    # Tracing configuration for performance monitoring
    extensionProviders:
    - name: jaeger
      envoyJaeger:
        service: jaeger-collector.istio-system.svc.cluster.local
        port: 14268
        maxTagLength: 256
    - name: prometheus
      prometheus:
        service: prometheus.monitoring.svc.cluster.local
        port: 9090
    
    defaultProviders:
      metrics:
      - prometheus
      tracing:
      - jaeger
    
    # Rate limiting for gaming API protection
    extensionProviders:
    - name: herald-ratelimit
      envoyRateLimitService:
        service: ratelimit.herald.svc.cluster.local
        port: 8081
        timeout: 0.25s