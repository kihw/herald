package handlers

import (
	"net/http"
	"lol-match-exporter/internal/services"
	"github.com/gin-gonic/gin"
)

type TestHandler struct {
	riotService *services.RiotService
}

func NewTestHandler(riotService *services.RiotService) *TestHandler {
	return &TestHandler{
		riotService: riotService,
	}
}

// TestRiotAPI teste la connexion à l'API Riot
func (th *TestHandler) TestRiotAPI(c *gin.Context) {
	if !th.riotService.IsConfigured() {
		c.JSON(http.StatusServiceUnavailable, gin.H{
			"error": "Riot API key not configured",
			"configured": false,
		})
		return
	}

	// Test avec un compte connu (Hide on bush est un compte célèbre)
	account, err := th.riotService.GetAccountByRiotID("Hide on bush", "KR1")
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{
			"error": err.Error(),
			"configured": true,
			"test_passed": false,
		})
		return
	}

	// Test récupération summoner
	summoner, err := th.riotService.GetSummonerByPUUID(account.PUUID)
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{
			"error": err.Error(),
			"configured": true,
			"account_found": true,
			"summoner_found": false,
		})
		return
	}

	// Test récupération de quelques matches
	matches, err := th.riotService.GetMatchListByPUUID(account.PUUID, 0, 5)
	if err != nil {
		c.JSON(http.StatusBadRequest, gin.H{
			"error": err.Error(),
			"configured": true,
			"account_found": true,
			"summoner_found": true,
			"matches_found": false,
		})
		return
	}

	c.JSON(http.StatusOK, gin.H{
		"configured": true,
		"test_passed": true,
		"account": gin.H{
			"puuid": account.PUUID,
			"gameName": account.GameName,
			"tagLine": account.TagLine,
		},
		"summoner": gin.H{
			"id": summoner.ID,
			"summonerLevel": summoner.SummonerLevel,
			"profileIconId": summoner.ProfileIconID,
		},
		"matches_count": len(matches),
		"sample_match_ids": matches,
	})
}

// GenerateMockData génère des données de test pour le développement
func (th *TestHandler) GenerateMockData(c *gin.Context) {
	// Cette fonction pourrait générer des données factices pour les tests
	c.JSON(http.StatusOK, gin.H{
		"message": "Mock data generation not implemented yet",
		"status": "placeholder",
	})
}
