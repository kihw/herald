# Herald.lol Gaming Analytics Platform - Production Nginx Configuration
# Optimized for gaming workloads with SSL termination

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Gaming-optimized worker settings
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format with gaming context
    log_format gaming '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     'rt=$request_time uct="$upstream_connect_time" '
                     'uht="$upstream_header_time" urt="$upstream_response_time" '
                     'gaming_session="$http_x_gaming_session_id"';

    access_log /var/log/nginx/access.log gaming;

    # Performance optimizations for gaming
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression for gaming assets
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Gaming-specific rate limiting
    limit_req_zone $binary_remote_addr zone=gaming_api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=gaming_auth:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=gaming_assets:10m rate=50r/s;

    # Connection limiting for DDoS protection
    limit_conn_zone $binary_remote_addr zone=gaming_conn:10m;

    # Upstream servers for load balancing
    upstream herald_api {
        least_conn;
        server herald-api:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream herald_frontend {
        least_conn;
        server herald-frontend:5173 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream herald_grpc {
        least_conn;
        server herald-grpc:50051 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Gaming WebSocket configuration
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Main HTTPS server for Herald.lol
    server {
        listen 443 ssl http2;
        server_name herald.lol www.herald.lol;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/herald.lol/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/herald.lol/privkey.pem;

        # Security and performance headers
        add_header X-Gaming-Platform "Herald" always;
        add_header Cache-Control "public, max-age=31536000" always;

        # Rate limiting
        limit_req zone=gaming_assets burst=100 nodelay;
        limit_conn gaming_conn 50;

        # Frontend application
        location / {
            proxy_pass http://herald_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Gaming frontend optimizations
            proxy_cache_bypass $http_upgrade;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Static assets with long cache
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://herald_frontend;
            proxy_set_header Host $host;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # API server for Herald gaming services
    server {
        listen 443 ssl http2;
        server_name api.herald.lol;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/herald.lol/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/herald.lol/privkey.pem;

        # Rate limiting for API
        limit_req zone=gaming_api burst=20 nodelay;
        limit_conn gaming_conn 20;

        # Gaming API endpoints
        location / {
            proxy_pass http://herald_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Gaming API optimizations
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering off;
            
            # CORS for gaming applications
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Gaming-Session-ID" always;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://herald_api/health;
            access_log off;
        }

        # Authentication endpoints with stricter rate limiting
        location /api/v1/auth/ {
            limit_req zone=gaming_auth burst=5 nodelay;
            proxy_pass http://herald_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # WebSocket server for real-time gaming
    server {
        listen 443 ssl http2;
        server_name ws.herald.lol;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/herald.lol/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/herald.lol/privkey.pem;

        # WebSocket configuration
        location / {
            proxy_pass http://herald_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts for gaming
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Gaming WebSocket rate limiting
            limit_conn gaming_conn 100;
        }
    }

    # gRPC server for internal services
    server {
        listen 443 ssl http2;
        server_name grpc.herald.lol;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/herald.lol/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/herald.lol/privkey.pem;

        # gRPC configuration
        location / {
            grpc_pass grpc://herald_grpc;
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
            
            # gRPC optimizations
            grpc_connect_timeout 5s;
            grpc_send_timeout 30s;
            grpc_read_timeout 30s;
        }
    }

    # Monitoring dashboard
    server {
        listen 443 ssl http2;
        server_name monitoring.herald.lol;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/herald.lol/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/herald.lol/privkey.pem;

        # Basic auth for monitoring (optional)
        # auth_basic "Herald Gaming Monitoring";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        location / {
            proxy_pass http://herald-grafana:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP redirect to HTTPS
    server {
        listen 80;
        server_name herald.lol www.herald.lol api.herald.lol ws.herald.lol grpc.herald.lol monitoring.herald.lol;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Default server to handle invalid hosts
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        # Dummy SSL certificate for default server
        ssl_certificate /etc/nginx/ssl/dummy.crt;
        ssl_certificate_key /etc/nginx/ssl/dummy.key;
        
        return 444; # Close connection without response
    }
}