# Herald.lol Gaming Analytics - Kong Custom Nginx Configuration
# Optimized for gaming performance: <5s analytics, 1M+ concurrent users

# Gaming Worker Process Configuration
worker_rlimit_nofile 65536;

events {
    # Gaming Connection Handling
    worker_connections 8192;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # Gaming Performance Optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 10000;
    
    # Gaming File Descriptors
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Gaming Buffer Sizes (optimized for gaming data)
    client_body_buffer_size 256k;
    client_header_buffer_size 4k;
    large_client_header_buffers 8 64k;
    client_max_body_size 50m;
    
    # Gaming Timeout Configuration
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    proxy_connect_timeout 10s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Gaming Compression (for API responses)
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    gzip_proxied any;
    gzip_disable "msie6";
    
    # Gaming Rate Limiting Zones
    limit_req_zone $binary_remote_addr zone=gaming_api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=gaming_analytics:10m rate=50r/m;
    limit_req_zone $binary_remote_addr zone=gaming_riot_api:10m rate=10r/m;
    
    # Gaming Connection Limiting
    limit_conn_zone $binary_remote_addr zone=gaming_conn:10m;
    limit_conn gaming_conn 50;
    
    # Gaming Security Headers
    more_set_headers "X-Content-Type-Options: nosniff";
    more_set_headers "X-Frame-Options: DENY";
    more_set_headers "X-XSS-Protection: 1; mode=block";
    more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    more_set_headers "X-Gaming-Platform: herald-lol";
    
    # Gaming Logging Configuration
    log_format gaming_analytics '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               'rt=$request_time uct="$upstream_connect_time" '
                               'uht="$upstream_header_time" urt="$upstream_response_time" '
                               'gaming_request_id="$http_x_gaming_request_id" '
                               'gaming_service="$upstream_addr"';
    
    # Gaming Access Logs
    access_log /usr/local/kong/logs/gaming-access.log gaming_analytics;
    error_log /usr/local/kong/logs/gaming-error.log warn;
    
    # Gaming Upstream Configuration
    upstream herald_backend {
        # Gaming Backend Load Balancing
        least_conn;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
        
        # Gaming Backend Servers
        server herald-backend:8080 max_fails=3 fail_timeout=30s weight=100;
        # Add more backend servers here for scaling
        # server herald-backend-2:8080 max_fails=3 fail_timeout=30s weight=100;
        # server herald-backend-3:8080 max_fails=3 fail_timeout=30s weight=100;
    }
    
    # Gaming Cache Configuration
    proxy_cache_path /tmp/kong_cache 
                     levels=1:2 
                     keys_zone=gaming_cache:100m 
                     max_size=1g 
                     inactive=60m 
                     use_temp_path=off;
    
    # Gaming SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # Gaming OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Gaming HTTP/2 Configuration
    http2_max_field_size 16k;
    http2_max_header_size 32k;
    http2_max_requests 10000;
    
    # Gaming Monitoring Endpoint
    server {
        listen 8888;
        server_name gaming-monitoring;
        
        location /gaming-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Gaming network
            deny all;
        }
        
        location /gaming-health {
            access_log off;
            return 200 "Gaming API Gateway Healthy\n";
            add_header Content-Type text/plain;
            add_header X-Gaming-Platform "herald-lol";
        }
    }
}